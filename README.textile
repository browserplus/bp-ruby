h2. Overview

This will be the home of the next iteration of the BrowserPlus "RubyInterpreter" service:  http://browserplus.yahoo.com/developer/services/?s=RubyInterpreter

This implementation will leverage the upcoming process separation in BrowserPlus 2.2.0 to address some community requests, namely:

# bp_require is silly, we should be able to require()
# dependent services should be able to include native extensions
# performance improvements (seek help to solve the "select problem")
# upgrade to ruby 1.9.1 stable (better i18n support, etc, etc)
# more built in extensions to the ruby environment
  (including the ability to use other services from a ruby service)
# ability to ship byte compiled ruby for obfuscation
   (closed source code sucks, more for obfuscating api keys, and faster
    load times)
# include why the lucky stiff's (in spirit at least) simplifications
   to writing ruby services

h3. Current State:

Nearly feature complete and building running on win32 and osx.  Need
an improved build system with automatic test invocation, as well as 
a couple more tasks complete (see the TODO)

h3. Build Notes:

external/ is where all external dependencies ruby will be
fetched, patched, and built.  You must first build external dependencies,
and then can build the BrowserPlus service.  Using the BrowserPlus SDK
you can run Ruby services from the command line, or install the service
locally and interact with them from the web.

h3. Build & Test Prerequisites

* A recent version of ruby installed on your machine (on windows you can use the "one-click installer")
* cmake, version 2.6 or greater (see http://cmake.org)
* a recent version of the BrowserPlus SDK (http://browserplus.yahoo.com/developer/service/sdk/)
* git (duh)
* (windows only) Visual Studio 2008 (express should work?)

After Checkout you must init submodules:
<pre>
$ git submodule init
$ git submodule update
</pre>

h4. Building & running on OSX 

# git submodule init
# git submodule update
# cd external/ruby && ./build.rb (this will download and build an embeddable ruby)
# cd src
# mkdir build
# cmake ..
# make

To run the interpreter with a sample service
<pre>
&lt;path_to_bpsdk&gt;/bin/ServiceRunner -providerPath src/build/RubyInterpreter test/HelloWorld
</pre>

Now you'll be in a command shell where you can interact with the loaded ruby service

h4. Building & running on Win32

> git submodule init
> git submodule update
> cd external\ruby 
> ruby build.rb
> cd ..\..\src
> mkdir build
> cd build
> cmake -G "Visual Studio 8 2008" ..
> devenv RubyInterpreterService.sln 
  (build Debug or Release)

To run the interpreter with a sample service
<pre>
&lt;path_to_bpsdk&gt;\bin\ServiceRunner -providerPath src\build\RubyInterpreter test\HelloWorld
</pre>


License:

see COPYING for information on licensing

stay tuned,
lloyd
